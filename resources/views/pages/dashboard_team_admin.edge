<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Gestion de l'équipe</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f9;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .container {
      text-align: center;
      background-color: white;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      max-width: 800px;
      width: 90%;
    }

    h1 {
      color: #333;
      margin-bottom: 20px;
    }

    .user-list, .invite-list {
      list-style-type: none;
      padding: 0;
      margin: 0;
    }

    .user-list li, .invite-list li {
      background-color: #f4f4f9;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 5px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .user-actions, .invite-actions {
      display: flex;
      gap: 10px;
    }

    .button {
      padding: 5px 10px;
      font-size: 14px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      text-decoration: none;
      color: white;
    }

    .invite {
      background-color: #007BFF;
    }

    .invite:hover {
      background-color: #0056b3;
    }

    .promote {
      background-color: #4CAF50;
    }

    .promote:hover {
      background-color: #388E3C;
    }

    .demote {
      background-color: #FFC107;
    }

    .demote:hover {
      background-color: #FFA000;
    }

    .delete {
      background-color: #e53935;
    }

    .delete:hover {
      background-color: #c62828;
    }

    .back-button {
      margin-top: 20px;
      background-color: #e53935;
    }

    .back-button:hover {
      background-color: #c62828;
    }

    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgb(0,0,0);
      background-color: rgba(0,0,0,0.4);
      padding-top: 60px;
    }

    .modal-content {
      background-color: #fefefe;
      margin: 5% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
      max-width: 600px;
      border-radius: 10px;
    }

    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }

    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
    }
  </style>
</head>
<body>
  @include('components/navbar')

  <div class="container">
    <h1>Gestion de l'équipe {{ team.name }}</h1>
    <h2>Membres de l'équipe</h2>
    <ul class="user-list">
      @each(user in members)
        <li>
          <span>{{ user.fullName }}</span>
          <div class="user-actions">
            <button class="button promote" onclick="promoteToManager({{ user.id }})">Promouvoir</button>
            <button class="button demote" onclick="demoteManager({{ user.id }})">Rétrograder</button>
            <button class="button delete" onclick="deleteUser({{ user.id }})">Supprimer</button>
          </div>
        </li>
      @endeach
    </ul>
    <button class="button invite" onclick="openInviteModal()">Inviter</button>
    <a href="/dashboard" class="button back-button">Retour</a>
  </div>

  <!-- Modal pour inviter des utilisateurs -->
  <div id="inviteModal" class="modal">
    <div class="modal-content">
      <span class="close" onclick="closeInviteModal()">&times;</span>
      <h2>Inviter des utilisateurs</h2>
      <ul class="invite-list">
        @each(user in users)
          <li>
            <span>{{ user.fullName }}</span>
            <div class="invite-actions">
              <button class="button invite" onclick="sendInvitation({{ user.id }})">Inviter</button>
            </div>
          </li>
        @endeach
      </ul>
    </div>
  </div>

  <script>

    // on charge les utilisateurs de l'équipe

    function openInviteModal() {
      document.getElementById('inviteModal').style.display = 'block';
    }

    function closeInviteModal() {
      document.getElementById('inviteModal').style.display = 'none';
    }

    function sendInvitation(userId) {
      fetch(`/send_invitation`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'credentials': 'include',
        },
        body: JSON.stringify({ user_id: userId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Invitation envoyée avec succès.');
        } else {
          alert('Erreur lors de l\'envoi de l\'invitation.');
        }
      });
    }

    function promoteToManager(userId) {
      fetch(`/promote_to_manager`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'credentials': 'include',
        },
        body: JSON.stringify({ user_id: userId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Utilisateur promu en manager avec succès.');
        } else {
          alert('Erreur lors de la promotion de l\'utilisateur.');
        }
      });
    }

    function demoteManager(userId) {
      fetch(`/demote_manager`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'credentials': 'include',
        },
        body: JSON.stringify({ user_id: userId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Manager rétrogradé avec succès.');
        } else {
          alert('Erreur lors de la rétrogradation du manager.');
        }
      });
    }

    function deleteUser(userId) {
      fetch(`/delete_user`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'credentials': 'include',
        },
        body: JSON.stringify({ user_id: userId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Utilisateur supprimé avec succès.');
          location.reload();
        } else {
          alert('Erreur lors de la suppression de l\'utilisateur.');
        }
      });
    }
  </script>
</body>
</html>