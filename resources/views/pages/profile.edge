<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
      Profil - ProjectPulse
    </title>
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,500&display=swap" rel="stylesheet" />
    <style>
      body {
        font-family: 'Poppins', sans-serif;
        background-color: #F7F8FA;
        margin: 0;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100vh;
        color: #46444c;
      }
      body *:not(.chat-button) {
        /* Appliquez ici les styles que vous souhaitez exclure pour .chat-button */
        font-family: 'Poppins', sans-serif;
        background-color: #F7F8FA;
        color: #46444c;
      }
      
      .profile-container {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 400px;
        text-align: center;
        padding: 30px;
      }
      
      .profile-container img {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 20px;
      }
      
      .profile-container h1 {
        font-size: 24px;
        color: #17161A;
        margin-bottom: 10px;
      }
      
      .profile-container p {
        font-size: 16px;
        color: #46444c;
        margin: 5px 0;
      }
      
      .profile-container .logout-btn {
        margin-top: 20px;
        padding: 10px 20px;
        font-size: 16px;
        background-color: #5A45FF;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }
      
      .profile-container .logout-btn:hover {
        background-color: #4a3ae0;
      }
      #edit-button img {
        transition: transform 0.2s ease;
      }
      #edit-button:hover img {
        transform: scale(1.1);
      }
      
      /* Formulaire d'édition */
      #edit-form {
        text-align: left;
      }
    </style>
  </head>
  <body>
    @include('components/navbar')
    @include('components/ChatButton')
    <div class="profile-container">
      <!-- Section Image de profil -->
      <div class="profile-pic-container" style="position: relative; display: inline-block;">
        <!-- Image de profil -->
        <img 
          src="{{ auth.user.getImage() }}" 
          alt="Image de profil" 
          id="image" 
          style="cursor: pointer;"
        />
        
        <!-- Bouton pour sélectionner une photo -->
        <button 
          id="select-photo-button" 
          style="margin-top: 10px; background: none; border: 1px solid #ddd; padding: 5px 10px; cursor: pointer; border-radius: 4px;"
        >
          Sélectionner une photo
        </button>
      
        <!-- Zone de glisser-déposer (seulement sur PC) -->
        <div id="upload-zone" 
             style="
               display: none; 
               position: absolute; 
               top: 0; 
               left: 0; 
               width: 100%; 
               height: 100%; 
               background: rgba(0, 0, 0, 0.5); 
               color: white; 
               border-radius: 50%; 
               text-align: center; 
               line-height: 100px;
             ">
          Glissez-déposez votre image ici
        </div>
      
        <!-- Input type file pour mobiles et PC -->
        <input 
          type="file" 
          id="file-input" 
          accept="image/*" 
          style="display: none;"
        />
      </div>
    
      <!-- Nom complet et e-mail -->
      <div class="fullname-container" style="position: relative; display: inline-block; margin-top: 20px;">
        <h1 id="fullname-display" style="display: inline-block;">
          {{ auth.user.getFullName() }}
        </h1>
        <button 
          id="edit-button" 
          style="background: none; border: none; cursor: pointer; margin-left: 10px; vertical-align: middle;"
        >
          <img 
            src="/resources/img/edit-pencil.png" 
            alt="Modifier" 
            style="width: 20px; height: 20px;"
          />
        </button>
        <form id="edit-form" action="/profile" method="POST" style="display: none; margin-top: 10px;">
          <input 
            type="text" 
            id="fullname-input" 
            name="fullname" 
            value="{{ auth.user.getFullName() }}" 
            required 
            style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px; margin-top: 10px;"
          />
          <button 
            type="submit" 
            class="logout-btn" 
            style="background-color: #28a745; margin-top: 10px;"
          >
            Enregistrer
          </button>
        </form>
      </div>
    
      <!-- Adresse e-mail -->
      <p>{{ auth.user.getMail() }}</p>
    </div>
  </body>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const editPhotoButton = document.getElementById('edit-photo-button');
      const selectPhotoButton = document.getElementById('select-photo-button');
      const fileInput = document.getElementById('file-input');
      const uploadZone = document.getElementById('upload-zone');
    
      // Ouvrir la sélection de fichier via le bouton
      selectPhotoButton.addEventListener('click', () => {
        fileInput.click();
      });
    
      // Gestion de la sélection de fichier
      fileInput.addEventListener('change', (e) => {
        const file = e.target.files[0];
        if (file) {
          handleFileUpload(file);
        }
      });
    
      // Zone de glisser-déposer (optionnelle sur PC)
      editPhotoButton.addEventListener('click', () => {
        uploadZone.style.display = 'block';
      });
    
      uploadZone.addEventListener('dragover', (e) => {
        e.preventDefault();
        uploadZone.style.background = 'rgba(0, 0, 0, 0.7)';
      });
    
      uploadZone.addEventListener('dragleave', () => {
        uploadZone.style.background = 'rgba(0, 0, 0, 0.5)';
      });
    
      uploadZone.addEventListener('drop', (e) => {
        e.preventDefault();
        const file = e.dataTransfer.files[0];
        if (file) {
          handleFileUpload(file);
        }
        uploadZone.style.display = 'none';
      });
    
      // Fonction de gestion de l'upload
      function handleFileUpload(file) {
        const formData = new FormData();
        formData.append('image', file);
    
        fetch('/img', {
          method: 'POST',
          credentials: 'include',
          body: formData,
        })
        .then(() => {
          Swal.fire({
            title: 'Chargement...',
            timer: 5000,
            timerProgressBar: true,
            didOpen: () => {
              Swal.showLoading();
            },
          }).then(() => {
            window.location.reload();
          });
        });
      }
    });
    
    document.addEventListener('DOMContentLoaded', () => {
      const editButton = document.getElementById('edit-button');
      const fullnameDisplay = document.getElementById('fullname-display');
      const editForm = document.getElementById('edit-form');
      const fullnameInput = document.getElementById('fullname-input');
  
      editButton.addEventListener('click', (e) => {
        e.preventDefault();
        // Masquer le texte et afficher le formulaire
        fullnameDisplay.style.display = 'none';
        editButton.style.display = 'none';
        editForm.style.display = 'block';
        fullnameInput.focus();
      });
    });
  </script>
</html>
