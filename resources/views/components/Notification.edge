@if (auth.isAuthenticated)
  <div id="notification-button" class="notification-button" onclick="toggleNotification()">
    <img src="/resources/img/notif.png" alt="notification" class="notification-img">
    <span id="title-notification" class="noselect">Notifications (0)</span>
  </div>

    <!-- Notification Panel -->
    <div id="notification-panel" class="notification-panel noselect">
      <div class="notification-header1 noselect">
        <h3 class="noselect">
          Notifications
        </h3>
        <button class="close-btn" onclick="toggleNotification()">X</button>
      </div>
      <div class="notification-body noselect">
        <div class="label">
          Notification(s) non lue(s) :
        </div>
        <ul id="notification-list">
        </ul>

      </div>
    </div>
@endif

<script>
  // Fonction pour afficher ou cacher le panel de notification
  function toggleNotification() {
    var notificationPanel = document.getElementById("notification-panel");
    if (notificationPanel.style.display === "none" || notificationPanel.style.display === "") {
      notificationPanel.style.display = "block";
    } else {
      notificationPanel.style.display = "none";
    }
  }
</script>

<script type="module">
    import {
        Transmit
      } from "/node_modules/@adonisjs/transmit-client";
      
    export const transmit = new Transmit({
    baseUrl: window.location.origin
    });

    const notifSubscription = transmit.subscription("notifications/" + {{ auth.user.id }});
    notifSubscription.create();

    const NotificationType = {
        MESSAGE: 'MESSAGE',
        TEAM_INVITE: 'TEAM_INVITE',
        TEAM_INVITE_ACCEPTED: 'TEAM_INVITE_ACCEPTED',
        TEAM_INVITE_DECLINED: 'TEAM_INVITE_DECLINED'
      };

      function displayNotif(notification){
        const notificationList = document.getElementById("notification-list");
        const notificationItem = document.createElement("li");
        switch (notification.type) {
          case NotificationType.MESSAGE:
            notificationItem.classList.add("message-notification");
            notificationItem.id = "user-" + notification.user.id;
            notificationItem.innerHTML = `<a href="/personal_chat?receiver_id=${notification.user.id}" class="notification-link">Nouveau message de <img src="${notification.image}" alt="${notification.senderName}" class="notification-user-img">${notification.user.fullName}</a> `;
            break;
          case NotificationType.TEAM_INVITE:
            notificationItem.classList.add("team-invite-notification");
            notificationItem.innerHTML = `<a href="/team/invitation/${notification.teamId}">${notification.senderName}</a> vous a invité à rejoindre l'équipe ${notification.team.name}`;
            break;
          case NotificationType.TEAM_INVITE_ACCEPTED:
            notificationItem.classList.add("team-invite-accepted-notification");
            notificationItem.innerText = notification.senderName + " a accepté votre invitation à rejoindre l'équipe " + notification.teamName;
            break;
          case NotificationType.TEAM_INVITE_DECLINED:
            notificationItem.classList.add("team-invite-declined-notification");
            notificationItem.innerText = notification.senderName + " a refusé votre invitation à rejoindre l'équipe " + notification.teamName;
            break;
          default:
            notificationItem.innerText = "Notification inconnue";
        }
        notificationList.appendChild(notificationItem);
        const titleNotification = document.getElementById("title-notification");
        titleNotification.innerText = "Notifications (" + notificationList.children.length + ")";
      }
      // on charge les notifications existantes en faisant une requête à l'API /notifications
      const response = await fetch('/notifications', {
        method: 'GET',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
      });
      const notifications = await response.json();
      notifications.notifications.forEach(notification => {
        displayNotif(notification);
      });
      notifications.messages.forEach(message => {
        displayNotif(message);
      });
  

    

      notifSubscription.onMessage(notification => {
      console.log("New notification received", notification);
      const notificationList = document.getElementById("notification-list");
      const notificationItem = document.createElement("li");
      switch (notification.type) {
        case NotificationType.MESSAGE:
          notificationItem.classList.add("message-notification");
          notificationItem.id = "user-" + notification.senderId;
          notificationItem.innerHTML = `<a href="/personal_chat?receiver_id=${notification.senderId}">${notification.senderName}</a> vous a envoyé un message`;
          break;
        case NotificationType.TEAM_INVITE:
          notificationItem.classList.add("team-invite-notification");
          notificationItem.innerHTML = `<a href="/team/invitation/${notification.teamId}">${notification.senderName}</a> vous a invité à rejoindre l'équipe ${notification.team.name}`;
          break;
        case NotificationType.TEAM_INVITE_ACCEPTED:
          notificationItem.classList.add("team-invite-accepted-notification");
          notificationItem.innerText = notification.senderName + " a accepté votre invitation à rejoindre l'équipe " + notification.teamName;
          break;
        case NotificationType.TEAM_INVITE_DECLINED:
          notificationItem.classList.add("team-invite-declined-notification");
          notificationItem.innerText = notification.senderName + " a refusé votre invitation à rejoindre l'équipe " + notification.teamName;
          break;
        default:
          notificationItem.innerText = "Notification inconnue";
      }
      notificationList.appendChild(notificationItem);
      const titleNotification = document.getElementById("title-notification");
      titleNotification.innerText = "Notifications (" + notificationList.children.length + ")";
    });
</script>

<style>
  /* Styles pour le bouton et le panneau de notification */
.notification-button {
  position: fixed;
  top: 80px; /* Ajustez la position selon vos besoins */
  right: 20px;
  padding: 15px 30px;
  background-color: #5A45FF;
  color: white;
  border-radius: 25px;
  font-size: 16px;
  cursor: pointer;
  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);
  transition: background-color 0.3s ease;
  display: flex;
  align-items: center;
}

.notification-button:hover {
  background-color: #4a3ae0;
}

.notification-img {
  width: 24px;
  height: 24px;
  margin-right: 10px;
}

.notification-panel {
  position: fixed;
  top: 138px; /* Ajustez la position selon vos besoins */
  right: 20px;
  width: 350px;
  height: 400px;
  background-color: white;
  box-shadow: 0px 2px 15px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  display: none; /* Par défaut, le panneau est caché */
  overflow: hidden;
  z-index: 1000;
}

.notification-header1 {
  background-color: #5A45FF;
  color: white;
  padding: 10px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.notification-header1 h3 {
  margin: 0;
  font-size: 18px;
}
.notification-link {
  display: block;
  text-decoration: none;
  color: inherit; /* Hérite de la couleur du parent */
  padding: 10px;
}

.notification-link:hover {
  background-color: #f0f0f0; /* Couleur de fond au survol */
}

.close-btn {
  background: none;
  border: none;
  color: white;
  font-size: 18px;
  cursor: pointer;
}

.notification-body {
  padding: 20px;
  font-size: 16px;
  color: #46444c;
  height: calc(100% - 50px);
  overflow-y: auto;
}

.label {
  font-size: 16px;
  margin-bottom: 10px;
}

#notification-list {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

#notification-list li {
  padding: 5px;
  border-bottom: 1px solid #ddd;
}

#notification-list li a {
  color: #5A45FF;
  text-decoration: none;
  margin-left: 0px;
}

#notification-list li a:hover {
  text-decoration: underline;
}

.message-notification {
  background-color: #e0f7fa;
}

.team-invite-notification {
  background-color: #fff3e0;
}

.team-invite-accepted-notification {
  background-color: #e8f5e9;
}

.team-invite-declined-notification {
  background-color: #ffebee;
}
.notification-user-img {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  margin-right: 0px;
  vertical-align: middle;
}
</style>