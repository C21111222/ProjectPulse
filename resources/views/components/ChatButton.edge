@if (auth.isAuthenticated)
  <div id="chat-button" class="chat-button" onclick="toggleChat()">
    <span id="title-chat" >Chat (0)</span>
  </div>

  <!-- Chat Panel -->
  <div id="chat-panel" class="chat-panel">
    <div class="chat-header">
      <h3>
        Chat
      </h3>
      <button class="close-btn" onclick="toggleChat()">X</button>
    </div>
    <div class="chat-body">
      <ul id="chat-users">
      </ul>
      <div class="openChatButton">
        <a href="/chat" class="button">Ouvrir le chat</a>
      </div>
    </div>
  </div>

  <style>
    /* Styles pour le bouton et le panel de chat */
    
    .chat-button {
      position: fixed;
      bottom: 20px;
      right: 20px;
      padding: 15px 30px;
      /* Augmenter la largeur pour rendre le bouton plus allongé */
      background-color: #5A45FF;
      color: white;
      border-radius: 25px;
      /* Moins rond pour une forme plus allongée */
      font-size: 16px;
      /* Ajuster la taille du texte pour qu'il s'adapte */
      cursor: pointer;
      box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);
      transition: background-color 0.3s ease;
    }
    
    .chat-button:hover {
      background-color: #4a3ae0;
    }
    
    .chat-panel {
      position: fixed;
      bottom: 70px;
      right: 20px;
      width: 350px;
      /* Largeur augmentée pour un panneau plus allongé */
      height: 400px;
      background-color: white;
      box-shadow: 0px 2px 15px rgba(0, 0, 0, 0.1);
      border-radius: 10px;
      display: none;
      /* Par défaut, l'onglet est caché */
      overflow: hidden;
      z-index: 1000;
    }
    
    .chat-header {
      background-color: #5A45FF;
      color: white;
      padding: 10px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .chat-header h3 {
      margin: 0;
      font-size: 18px;
    }
    
    .close-btn {
      background: none;
      border: none;
      color: white;
      font-size: 18px;
      cursor: pointer;
    }
    
    .unread-count {
    background-color: red;
    color: white;
    border-radius: 50%;
    padding: 5px 10px;
    font-size: 14px;
    margin-left: 10px;
    }
    .chat-body {
      padding: 20px;
      font-size: 16px;
      color: #46444c;
      height: calc(100% - 50px);
      /* Ajuste la taille du corps */
      display: flex;
      justify-content: center;
      align-items: center;
    }
    
    .chat-body {
      padding: 10px;
    }
    
    .openChatButton {
      display: flex;
      justify-content: center;
      align-items: center;
      position: absolute;
      bottom: 10px;
      /* Ajuster la distance par rapport au bas de la fenêtre de chat */
      left: 50%;
      transform: translateX(-50%);
    }
    
    .openChatButton .button {
      display: inline-block;
      padding: 10px 20px;
      /* Ajuster le padding pour rendre le bouton plus grand */
      background-color: #5A45FF;
      /* Couleur de fond */
      color: white;
      /* Couleur du texte */
      text-decoration: none;
      /* Supprimer la décoration de texte */
      border-radius: 25px;
      /* Bordures arrondies */
      font-size: 16px;
      /* Taille du texte */
      transition: background-color 0.3s ease;
      /* Transition pour l'effet de survol */
    }

#chat-users {
  display: flex;
  flex-direction: column; /* Pour aligner les éléments verticalement */
  align-items: center; /* Centre horizontalement les éléments */
  padding: 0; /* Supprime le padding du `ul` */
  margin: 0; /* Supprime les marges */
  list-style-type: none; /* Supprime les puces */
}

.user-item {
  display: flex;
  justify-content: center; /* Centre le contenu dans chaque item */
  align-items: center; /* Centre verticalement le contenu */
  width: 80%; /* Ajuste la largeur des items */
  padding: 10px;
  margin: 5px 0;
  border-radius: 5px;
  background-color: #aA45FF; /* Bleu pour le fond */
  color: white; /* Texte blanc */
  font-size: 16px; /* Taille du texte */
  cursor: pointer;
  transition: background-color 0.3s ease;
  text-align: center;
}

.user-item:hover {
  background-color: #4a3ae0; /* Couleur plus sombre au survol */
}

.user-item a {
  color: white; /* Assure que les liens sont en blanc */
  text-decoration: none; /* Supprime le soulignement des liens */
  width: 100%; /* Assure que le lien occupe tout l'espace disponible */
}

.user-item a:hover {
  text-decoration: underline; /* Ajoute un soulignement au survol */
}

    
    .openChatButton .button:hover {
      background-color: #4a3ae0;
      /* Couleur de fond au survol */
    }
  </style>
  <script>
    function toggleChat() {
      const chatPanel = document.getElementById('chat-panel');
      const isHidden = window.getComputedStyle(chatPanel).display === 'none';

      if (isHidden) {
        chatPanel.style.display = 'block';
      } else {
        chatPanel.style.display = 'none';
      }
    }

  </script>
  <script type="module">
  console.log("ChatButton component loaded");
  import { Transmit } from '/node_modules/@adonisjs/transmit-client'

  export const transmit = new Transmit({
    baseUrl: window.location.origin
  })
      
    const notifSubscription = transmit.subscription('notifications/' + {{ auth.user.id }});
  notifSubscription.create();
  // quand il y a une nouvelle notification on colori en rouge le pseudo de l'utilisateur envoyeur
  notifSubscription.onMessage((data) => {
    const userIndex = users.findIndex(u => u.id === data.senderId);
    if (userIndex === -1) {
      const chatUsers = document.getElementById('chat-users');
      const user = document.createElement('li');
      user.classList.add('user-item');
      user.innerHTML = `<a href="/chat" style="color: red">${data.senderName}</a>`;
      chatUsers.appendChild(user);
      users.push({ id: data.senderId, fullName: data.senderName, messageViewed: false });
      document.getElementById('title-chat').innerText = `Chat (${users.length})`;
    }
  });
    async function getUsers() {
    const users2Response = await fetch(`/unviewed_chats`, {
      method: 'GET',
      credentials: 'include', // Permet d'envoyer les cookies de session
      headers: {
        'Content-Type': 'application/json',
      },
      });
    return await users2Response.json();
    }
    
    const users2 = await getUsers();
    console.log(users2);
    // pour chaque utilisateur on ajoute un li dans la liste des utilisateurs
    const chatUsers = document.getElementById('chat-users');
    const users = [];
    for (const user2 of users2){
      console.log(user2);
      const userElement = document.createElement('li');
      // on rajoute la classe class="user-item"  pour pouvoir styliser les li
      userElement.classList.add('user-item');
      userElement.innerHTML = `<a href="/chat">${user2.user.fullName}</a>`;
      chatUsers.appendChild(userElement);
      users.push({ id: user2.id, fullName: user2.fullName, messageViewed: false });
    }
    // on affiche le nombre d'utilisateurs non vus
    document.getElementById('title-chat').innerText = `Chat (${users.length})`;
       

  </script>
@endif
